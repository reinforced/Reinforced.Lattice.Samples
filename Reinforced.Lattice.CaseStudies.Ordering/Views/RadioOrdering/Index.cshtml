@{ ViewBag.Title = "Ordering demo"; }

@using Reinforced.Lattice
@using Reinforced.Lattice.CellTemplating
@using Reinforced.Lattice.Configuration
@using Reinforced.Lattice.Mvc
@using Reinforced.Lattice.Plugins.Loading
@using Reinforced.Lattice.Plugins.Ordering
@using Reinforced.Lattice.Templates
@model Reinforced.Lattice.CaseStudies.Ordering.Models.HomeIndexViewModel
@{
    var conf = Model.Table;
    conf.Column(c => c.FirstName)
        .Title("First Name <br/> <span class='subscript'>All Janets to top</span>")
        .OrderableUi(c => c.UseClientOrderingNumericExpression("({FirstName}=='Janet'?1:0)"));
    conf.Column(c => c.RegistrationDate).Format("`moment({@}).fromNow()`");

    conf.Column(c => c.Email)
.Title("Email <br/> <span class='subscript'>Client ordering, by email domain</span>")
.OrderableUi(c => c.UseClientOrdering("orderByEmailDomain"));
    conf.Column(c => c.IsActive).DataOnly();
    conf.Column(c => c.UserType).DataOnly();
}
<div id="table"></div>

@section scripts {
    <style type="text/css">
        .subscript {
            font-weight: normal;
            font-size: 11px;
            color: #0586e1;
            font-family: monospace;
        }
    </style>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.17.1/moment.min.js"></script>
    <script type="text/javascript">
        function orderByEmailDomain(x, y) {
            var domainX = x.Email.substring(x.Email.indexOf('@Html.Raw("@")'));
            var domainY = y.Email.substring(y.Email.indexOf('@Html.Raw("@")'));
            return domainX.localeCompare(domainY);
        }
    </script>
    @{ Html.RenderTemplates("lt", "Lattice_Templates_Bootstrap"); }
    @Model.Table.InitializationScript("table", "window.$$table")
}
