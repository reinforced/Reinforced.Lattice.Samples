@{ ViewBag.Title = "Mixed filters"; }

@using Reinforced.Lattice.CaseStudies.Filtering.Models
@using Reinforced.Lattice.CellTemplating
@using Reinforced.Lattice.Configuration
@using Reinforced.Lattice.Filters
@using Reinforced.Lattice.Filters.Multi
@using Reinforced.Lattice.Filters.Select
@using Reinforced.Lattice.Filters.Value
@using Reinforced.Lattice.Mvc
@using Reinforced.Lattice.Templates

@model Reinforced.Lattice.CaseStudies.Filtering.Models.HomeIndexViewModel
@{
    var conf = Model.Table;
    conf.Column(c => c.Priority).Template(x =>
    {
    x.RazorIf("{@}==0", @<span style="color: #c7c7c7"><span class="glyphicon glyphicon-unchecked"></span> Minor</span>);
        x.RazorIf("{@}==1", @<span style="color: #049404"><span class="glyphicon glyphicon-arrow-down"></span> Low</span>);
        x.RazorIf("{@}==2", @<span><span class="glyphicon glyphicon-tasks"></span> Normal</span>);
        x.RazorIf("{@}==3", @<span style="color: #ff4489"><span class="glyphicon glyphicon-arrow-up"></span> High</span>);
        x.RazorIf("{@}==4", @<span style="color: #e89a0c"><span class="glyphicon glyphicon-exclamation-sign"></span> Major</span>);
        x.RazorIf("{@}==5", @<span style="color: #dc0000"><span class="glyphicon glyphicon-fire"></span> Critical</span>);
    });
    conf.Column(c => c.Supplier).FilterValueUi(ui => ui.ClientFiltering());
    conf.Column(c => c.EndDate).FilterValueUi(c => c.CompareOnlyDates().Inputdelay(10).ClientFiltering());
    conf.Column(c => c.Priority)
        .FilterMultiSelectUi(ui => ui.SelectAny().SelectItems(EnumHelper.GetSelectList(typeof(Priority))).ClientFiltering());

    conf.Column(c => c.Title)
        .Title("Title <br/> <span class='subscript'>Server filtering, exact match</span>");
    conf.Column(c => c.Supplier)
        .Title("Supplier <br/> <span class='subscript'>Client filtering, matches partial words</span>");
    conf.Column(c => c.Price)
        .Title("Price <br/> <span class='subscript'>Server</span>");
    conf.Column(c => c.Tax)
        .Title("Tax <br/> <span class='subscript'>Server, 90 trick</span>");
    conf.Column(c => c.Rating)
        .Title("Rating <br/> <span class='subscript'>Server filtering</span>");
    conf.Column(c => c.Priority)
        .Title("Priority <br/> <span class='subscript'>Client</span>");
    conf.Column(c => c.StartDate)
        .Title("Start Date <br/> <span class='subscript'>Server filtering</span>");
    conf.Column(c => c.EndDate)
        .Title("End Date <br/> <span class='subscript'>Client filtering</span>");
    conf.Column(c => c.Scope)
        .Title("Scope <br/> <span class='subscript'>Client</span>");
}
<div id="table"></div>

@section scripts {
    <style type="text/css">
        [data-track='h-Tax'] {
            width: 150px;
        }

        [data-track='h-Price'] {
            width: 120px;
        }

        [data-track='h-StartDate'] {
            width: 120px;
        }

        [data-track='h-EndDate'] {
            width: 120px;
        }

        [data-track='h-Scope'] {
            width: 140px;
        }

        [data-track='h-Rating'] {
            width: 130px;
        }

        [data-track='h-Priority'] {
            width: 120px;
        }
    </style>
    @{ Html.RenderTemplates("lt", "Lattice_Templates_Bootstrap"); }
    @Model.Table.OnInitialized("fixColumnWidths").InitializationScript("table", "window.$$table")
}